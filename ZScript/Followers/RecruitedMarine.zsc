class RecruitedMarine : HDFollower
{
	override void OnDestroy()
	{
		DropAllAmmo();
		DropAllSupplies();
		let WornArmor = FindInventory("HDArmourWorn");
		if (WornArmor)
		{
			A_DropInventory(WornArmor.GetClass());
		}
		for (int i = 0; i < 64; ++i)
		{
			vector3 POff = ((random() - 128) * Radius / 128, (random() - 128) * Radius / 128, random() * Height / 256);
			vector3 PVel = ((1.0 / 4096) * (random() - 128), (1.0 / 4096) * (random() - 128), (1.0 / 4096) * (random() - 128));
			vector3 PAcc = ((1.0 / 16384) * (random() - 128), (1.0 / 16384) * (random() - 128), (1.0 / 16384) * (random() - 128));
			A_SpawnParticle(random(0, 1) ? Color(154, 49, 49) : Color(125, 24, 24), 0, TICRATE * 2, 4, 0, POff.x, POff.y, POff.z, PVel.x, PVel.y, PVel.z, PAcc.x, PAcc.y, PAcc.z);
		}

		Super.OnDestroy();
	}

	override void InitWeapons()
	{
		static const Name AllWeapons[] = { 'FW_SMG', 'FW_Hunter', 'FW_ZM66', 'FW_RocketLauncher' };
		for (int i = 0; i < AllWeapons.Size(); ++i)
		{
			class<FollowerWeapon> fw = AllWeapons[i];
			if (fw)
			{
				FollowerWeapon wpn = FollowerWeapon(new(fw));
				Weapons.Push(wpn);
			}
		}
	}

	Default
	{
		Tag "Marine";
		+HDMOBBASE.HASHELMET
		+HDFOLLOWER.CANDISMISS
		HDFollower.FollowerInfo 100000000, GENDER_MALE, 'FollowerBodyMarine', '';
		HDFollower.ResurrectType RESF_BLUES;
	}

	States
	{
		Spawn:
			FLWM A 0;
			Goto Super::Spawn;
	}
}

class FollowerBodyMarine : FollowerBody
{
	Default
	{
		Inventory.MaxAmount 50; // [Ace] Stop hoarding marines, damn it.
		Inventory.Icon "FOLLZ0";
		Tag "Marine";
	}
}