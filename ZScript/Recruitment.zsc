extend class FollowerHandler
{
	private void RecruitMarine(HDMarine m, int owningPlayer)
	{
		if (!m)
		{
			return;
		}

		if (!m.bFRIENDLY && random(0, 2))
		{
			string msg = "Go to hell, sucker.";
			switch(random[msgrand](1, 3))
			{
				case 1: msg = "Kiss my ass."; break;
				case 2: msg = "Go fuck yourself."; break;
				case 3: msg = "HA HA HA *cough* I'd rather die."; break;
			}
			players[owningPlayer].mo.A_Log("\c[White]Marine: \c[Green]"..msg.."\c-");
			players[owningPlayer].mo.A_StartSound("misc/chat", 20, CHANF_LOCAL);
			m.A_SpawnItemEx("HDFragGrenade", 2, 0, 2, 1, 0, 2, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS);
			m.A_SpawnItemEx("HDFragSpoon", 2, 0, 2,random(1, 2), 0, random(8, 16), random(-12, 12), SXF_NOCHECKPOSITION);
			m.bNOTDMATCH = true; // [Ace] Used to prevent actor from getting persuaded again.
			return;
		}
		else if (!m.bFRIENDLY)
		{
			string msg = "Alright, fine.";
			switch(random[msgrand](1, 3))
			{
				case 1: msg = "Don't kill me. I'll fight on your side."; break;
				case 2: msg = "You win."; break;
				case 3: msg = "The pay was bad anyway."; break;
			}
			players[owningPlayer].mo.A_Log("\c[White]Marine: \c[Green]"..msg.."\c-");
			players[owningPlayer].mo.A_StartSound("misc/chat", 20, CHANF_LOCAL);
			m.bFRIENDLY = true;
			m.SetNickname();
		}
		else
		{
			string msg = "Lead the way.";
			switch(random[msgrand](1, 3))
			{
				case 1: msg = "At your service."; break;
				case 2: msg = "At your command."; break;
				case 3: msg = "Point and I'll shoot."; break;
			}
			players[owningPlayer].mo.A_Log("\c[White]Marine: \c[Green]"..msg.."\c-");
			players[owningPlayer].mo.A_StartSound("misc/chat", 20, CHANF_LOCAL);
		}

		HDFollower Recruit = CreateFollower('RecruitedMarine', owningPlayer, m.pos);

		int Gender = 0;
		string snd = m.PainSound;
		if (snd.IndexOf("marinef") > -1)
		{
			Gender = 1;
		}
		else if (snd.IndexOf("marineb") > -1)
		{
			Gender = 2;
		}
		Recruit.angle = m.angle;
		Recruit.Health = m.Health;
		Recruit.Gender = Gender;
		Recruit.PainSound = m.PainSound;
		Recruit.DeathSound = m.DeathSound;
		Recruit.DisplayName = m.nickname;
		Recruit.Translation = m.Translation;

		let Armor = HDArmourWorn(m.FindInventory('HDArmourWorn'));
		if (Armor)
		{
			let NewArmor = HDArmourWorn(Recruit.GiveInventoryType('HDArmourWorn'));
			NewArmor.Durability = Armor.Durability;
			NewArmor.Mega = Armor.Mega;
		}

		if (m.InStateSequence(m.CurState, m.FindState('Falldown')))
		{
			Recruit.Status = FStatus_InactiveOrDead;
			Recruit.SetStateLabel('Standup');
		}

		m.Destroy();
	}

	static bool IsPuppet(Actor a)
	{
		ThinkerIterator it = ThinkerIterator.Create('AngelFire', Thinker.STAT_DEFAULT);
		AngelFire f;
		while ((f = AngelFire(it.Next())))
		{
			if (f.master && f.master == a)
			{
				return true;
			}
		}
		return false;
	}
}