extend class FollowerHandler
{
	// --------------------------------------------------
	// STATIC
	// --------------------------------------------------

	static bool IsPuppet(Actor a)
	{
		ThinkerIterator it = ThinkerIterator.Create('AngelFire', Thinker.STAT_DEFAULT);
		AngelFire f;
		while ((f = AngelFire(it.Next())))
		{
			if (f.master && f.master == a)
			{
				return true;
			}
		}
		return false;
	}

	// --------------------------------------------------
	// ACTIONS
	// --------------------------------------------------

	private void RecruitMarine(HDOperator m, int owningPlayer)
	{
		if (!m)
		{
			return;
		}

		if (!m.bFRIENDLY && random(0, 2))
		{
			string msg = "$FLW_RECMSGGOTOHELL";
			switch(random[msgrand](1, 3))
			{
				case 1: msg = "$FLW_RECMSGKISSASS"; break;
				case 2: msg = "$FLW_RECMSGFUCKYOU"; break;
				case 3: msg = "$FLW_RECMSGIDRATHERDIE"; break;
			}
			players[owningPlayer].mo.A_Log(StringTable.Localize("$FLW_RECCHATMSG")..StringTable.Localize(msg).."\c-");
			players[owningPlayer].mo.A_StartSound("misc/chat", 20, CHANF_LOCAL);
			m.DamageMobj(m, m, m.Health, 'maxhpdrain', DMG_FORCED);

			Actor a; bool success;
			[success, a] = m.A_SpawnItemEx("HDFragGrenade", 2, 0, 2, 1, 0, 2, 0, SXF_NOCHECKPOSITION | SXF_TRANSFERPOINTERS);
			m.A_SpawnItemEx("HDFragSpoon", 2, 0, 2,random(1, 2), 0, random(8, 16), random(-12, 12), SXF_NOCHECKPOSITION);
			if (success)
			{
				HDFragGrenade(a).fuze += 100;
			}
			return;
		}
		else if (!m.bFRIENDLY)
		{
			string msg = "$FLW_RECMSGFINE";
			switch(random[msgrand](1, 3))
			{
				case 1: msg = "$FLW_RECMSGIONYOURSIDE"; break;
				case 2: msg = "$FLW_RECMSGYOUWIN"; break;
				case 3: msg = "$FLW_RECMSGPAYWASBAD"; break;
			}
			players[owningPlayer].mo.A_Log(StringTable.Localize("$FLW_RECCHATMSG")..StringTable.Localize(msg).."\c-");
			players[owningPlayer].mo.A_StartSound("misc/chat", 20, CHANF_LOCAL);
			m.A_SetFriendly(true);
		}
		else
		{
			string msg = "$FLW_RECMSGLEADWAY";
			switch(random[msgrand](1, 3))
			{
				case 1: msg = "$FLW_RECMSGATYOURSERVIECE"; break;
				case 2: msg = "$FLW_RECMSGATYOURCOMMAND"; break;
				case 3: msg = "$FLW_RECMSGPOINTANDILLSHOOT"; break;
			}
			players[owningPlayer].mo.A_Log(StringTable.Localize("$FLW_RECCHATMSG")..StringTable.Localize(msg).."\c-");
			players[owningPlayer].mo.A_StartSound("misc/chat", 20, CHANF_LOCAL);
		}

		HDFollower recruit = CreateFollower('RecruitedMarine', owningPlayer, GetUniqueIndex(10000), m.pos);

		int gender = 0;
		string snd = m.SeeSound;
		if (snd.IndexOf("operatorf") != -1)
		{
			gender = 1;
		}
		else if (snd.IndexOf("operatorn") != -1 || snd.IndexOf("operatorb") != -1)
		{
			gender = 2;
		}
		recruit.angle = m.angle;
		recruit.Health = m.Health * 2; // [Ace] Followers have twice as much health. Make sure it scales appropriately.
		recruit.gender = gender;
		recruit.SeeSound = m.SeeSound;
		recruit.PainSound = m.PainSound;
		recruit.DeathSound = m.DeathSound;
		recruit.SetTag(GetUniqueMarineName(gender));
		recruit.Translation = m.Translation;
		recruit.voicepitch = m.voicepitch;

		switch (m.wep)
		{
			case HDOperator.HDMW_SMG:
			case -HDOperator.HDMW_SMG: FollowerWeapon.CreateAndAdd('FW_SMG', recruit); break;

			case HDOperator.HDMW_HUNTER:
			case -HDOperator.HDMW_HUNTER: FollowerWeapon.CreateAndAdd('FW_Hunter', recruit); break;

			case HDOperator.HDMW_ZM66:
			case -HDOperator.HDMW_ZM66: FollowerWeapon.CreateAndAdd('FW_ZM66', recruit); break;

			case HDOperator.HDMW_ROCKET:
			case -HDOperator.HDMW_ROCKET: FollowerWeapon.CreateAndAdd('FW_RocketLauncher', recruit); break;
		}

		let Armor = HDArmourWorn(m.FindInventory('HDArmourWorn'));
		if (Armor)
		{
			let NewArmor = HDArmourWorn(recruit.GiveInventoryType('HDArmourWorn'));
			NewArmor.Durability = Armor.Durability;
			NewArmor.Mega = Armor.Mega;
		}

		if (m.InStateSequence(m.CurState, m.FindState('Falldown')))
		{
			recruit.Status = FStatus_InactiveOrDead;
			recruit.SetStateLabel('Standup');
		}

		m.Destroy();
	}

	// --------------------------------------------------
	// INFORMATION
	// --------------------------------------------------

	private string GetUniqueMarineName(int gender)
	{
		string UniqueName = "Anonymous";
		static const string MaleNames[] =
		{
			"$FLWNAME_Arcturus", "$FLWNAME_Proteus", "$FLWNAME_Orion", "$FLWNAME_Deimos", "$FLWNAME_Kawaimomona", "$FLWNAME_Kaihalulu", "$FLWNAME_Kalani", "$FLWNAME_Akamu", "$FLWNAME_Amari", "$FLWNAME_Sanjuro", "$FLWNAME_Tezuka", "$FLWNAME_Hoshino", "$FLWNAME_Ota", "$FLWNAME_Soma", "$FLWNAME_Kashiwa", "$FLWNAME_Nakada",
			"$FLWNAME_Haddi", "$FLWNAME_Gunnar", "$FLWNAME_Isekai", "$FLWNAME_Mikkel", "$FLWNAME_Adel", "$FLWNAME_JÃ³nar", "$FLWNAME_Kasper", "$FLWNAME_Steinn", "$FLWNAME_Gustav", "$FLWNAME_Leonhard", "$FLWNAME_Leon", "$FLWNAME_Loki", "$FLWNAME_Vilbert", "$FLWNAME_Almar", "$FLWNAME_Stadius", "$FLWNAME_Mikail", "$FLWNAME_Koen",
			"$FLWNAME_Gino", "$FLWNAME_Marc", "$FLWNAME_Fabio", "$FLWNAME_Andrea", "$FLWNAME_Bernard", "$FLWNAME_Aleksy", "$FLWNAME_Roch", "$FLWNAME_Bartosz", "$FLWNAME_Maciej", "$FLWNAME_Marek", "$FLWNAME_Stryker", "$FLWNAME_Arkadiusz", "$FLWNAME_Adoranz", "$FLWNAME_Tristan", "$FLWNAME_Isaiah", "$FLWNAME_Mebunai", "$FLWNAME_Eleazar",
			"$FLWNAME_Ishbaal", "$FLWNAME_Ahiam", "$FLWNAME_Hiddai", "$FLWNAME_Elhanan", "$FLWNAME_Abiezer", "$FLWNAME_Ithai", "$FLWNAME_Eliam", "$FLWNAME_Uriah", "$FLWNAME_Fane", "$FLWNAME_Reks", "$FLWNAME_Zayne", "$FLWNAME_Salvador", "$FLWNAME_Zeus", "$FLWNAME_Axton", "$FLWNAME_Zane", "$FLWNAME_Blake", "$FLWNAME_Raynor", "$FLWNAME_Jim",
			"$FLWNAME_Thomas", "$FLWNAME_Ronald", "$FLWNAME_Wayn", "$FLWNAME_Lero", "$FLWNAME_Leon", "$FLWNAME_Jack", "$FLWNAME_Armanis", "$FLWNAME_Krieg", "$FLWNAME_Emerton", "$FLWNAME_Samael", "$FLWNAME_Kragoth", "$FLWNAME_Blisk", "$FLWNAME_Ryo", "$FLWNAME_Nathaniel", "$FLWNAME_Killian", "$FLWNAME_Dominic", "$FLWNAME_Santiago",
			"$FLWNAME_Sebastian", "$FLWNAME_Malcolm", "$FLWNAME_Rakanoth", "$FLWNAME_Ixanos", "$FLWNAME_Nick", "$FLWNAME_Bane", "$FLWNAME_Kaada", "$FLWNAME_Loque", "$FLWNAME_Xan", "$FLWNAME_Isaak", "$FLWNAME_Hawkins", "$FLWNAME_NeBan", "$FLWNAME_Miller", "$FLWNAME_Othello", "$FLWNAME_Abaddon", "$FLWNAME_Anubis", "$FLWNAME_Raiden",
			"$FLWNAME_Mengsk", "$FLWNAME_Samson", "$FLWNAME_Gabriel", "$FLWNAME_Ranger", "$FLWNAME_Sarge", "$FLWNAME_Bitterman", "$FLWNAME_Hossman", "$FLWNAME_Uriel", "$FLWNAME_Vic", "$FLWNAME_Webster", "$FLWNAME_Sonny", "$FLWNAME_Vince", "$FLWNAME_Taz", "$FLWNAME_Earl", "$FLWNAME_Eugene", "$FLWNAME_Hector", "$FLWNAME_Wes", "$FLWNAME_Ronnie",
			"$FLWNAME_Mark", "$FLWNAME_Necroth", "$FLWNAME_Grail", "$FLWNAME_Damarus", "$FLWNAME_Selig", "$FLWNAME_Manwell", "$FLWNAME_Kregore", "$FLWNAME_Bruce", "$FLWNAME_Arkon", "$FLWNAME_Rolph", "$FLWNAME_Arnold", "$FLWNAME_Lugar", "$FLWNAME_Sloan", "$FLWNAME_Harlin", "$FLWNAME_Brock", "$FLWNAME_Rankin", "$FLWNAME_Riker", "$FLWNAME_Axon"
		};
		static const string FemaleNames[] =
		{
			"$FLWNAME_Arlin", "$FLWNAME_Elaine", "$FLWNAME_Ophelia", "$FLWNAME_Almedha", "$FLWNAME_Sana", "$FLWNAME_Karmin", "$FLWNAME_Ashera", "$FLWNAME_Liv", "$FLWNAME_Yrsa", "$FLWNAME_Kristiane", "$FLWNAME_Irene", "$FLWNAME_Hedvig", "$FLWNAME_Lena", "$FLWNAME_Freja", "$FLWNAME_Maya", "$FLWNAME_Kristine", "$FLWNAME_Elin", "$FLWNAME_Emeryn",
			"$FLWNAME_Amelix", "$FLWNAME_Emson", "$FLWNAME_Rayne", "$FLWNAME_Azraelle", "$FLWNAME_Visse", "$FLWNAME_Ephemera", "$FLWNAME_Samantha", "$FLWNAME_Kura", "$FLWNAME_Kyra", "$FLWNAME_Malise", "$FLWNAME_Faith", "$FLWNAME_Edela", "$FLWNAME_Alice", "$FLWNAME_Ymir", "$FLWNAME_Lauren", "$FLWNAME_Alana", "$FLWNAME_Akasha", "$FLWNAME_Avicia",
			"$FLWNAME_Lillian", "$FLWNAME_Lilith", "$FLWNAME_May", "$FLWNAME_Eleanor", "$FLWNAME_Yuzuki", "$FLWNAME_Kaede", "$FLWNAME_Aida", "$FLWNAME_Sapphire", "$FLWNAME_Selket", "$FLWNAME_Bastet", "$FLWNAME_Hathor", "$FLWNAME_Nekhbet", "$FLWNAME_Tayet", "$FLWNAME_Auriel", "$FLWNAME_Nephthys", "$FLWNAME_Athena", "$FLWNAME_Artemis",
			"$FLWNAME_Eirene", "$FLWNAME_Eris", "$FLWNAME_Freya", "$FLWNAME_Hera", "$FLWNAME_Juno", "$FLWNAME_Kali", "$FLWNAME_Luna", "$FLWNAME_Maeve", "$FLWNAME_Minerva", "$FLWNAME_Persephone", "$FLWNAME_Rhea", "$FLWNAME_Selene", "$FLWNAME_Themis", "$FLWNAME_Gabrielle", "$FLWNAME_Gabriella", "$FLWNAME_Gabby", "$FLWNAME_Elvira", "$FLWNAME_Mynx",
			"$FLWNAME_Daemia", "$FLWNAME_Lucy", "$FLWNAME_Izzy", "$FLWNAME_Izabel", "$FLWNAME_Jade", "$FLWNAME_Kira", "$FLWNAME_Ming", "$FLWNAME_Cryss", "$FLWNAME_Freylis", "$FLWNAME_Falareth", "$FLWNAME_Makreth", "$FLWNAME_Nebri", "$FLWNAME_Rylisa", "$FLWNAME_Shyann", "$FLWNAME_Sara", "$FLWNAME_Ada", "$FLWNAME_Sarena", "$FLWNAME_Zanna", "$FLWNAME_Tara",
			"$FLWNAME_Xyra", "$FLWNAME_Annaka", "$FLWNAME_Tamika", "$FLWNAME_Ryanna", "$FLWNAME_Azure", "$FLWNAME_Aryss", "$FLWNAME_Hunter", "$FLWNAME_Raven"
		};
		static const string NeutralNames[] =
		{
			"$FLWNAME_Tempest", "$FLWNAME_Cinder", "$FLWNAME_Vexx", "$FLWNAME_Drace", "$FLWNAME_Klyn", "$FLWNAME_Vayne", "$FLWNAME_Vail", "$FLWNAME_Brick", "$FLWNAME_Zero", "$FLWNAME_Blade", "$FLWNAME_Apocalypse", "$FLWNAME_Thunder", "$FLWNAME_Void", "$FLWNAME_Kanzaxe", "$FLWNAME_Hatchet", "$FLWNAME_Blink", "$FLWNAME_Whiskey", "$FLWNAME_Splinter",
			"$FLWNAME_Light", "$FLWNAME_Reaper", "$FLWNAME_Jet", "$FLWNAME_Wraith", "$FLWNAME_Quill", "$FLWNAME_Discount", "$FLWNAME_Death", "$FLWNAME_Nil", "$FLWNAME_Umbra", "$FLWNAME_Scar", "$FLWNAME_Curse", "$FLWNAME_Banshee", "$FLWNAME_Arrow", "$FLWNAME_Dash", "$FLWNAME_Niven", "$FLWNAME_Phantom", "$FLWNAME_Barricade", "$FLWNAME_Enigma",
			"$FLWNAME_Matrix", "$FLWNAME_Entropy", "$FLWNAME_Nomad", "$FLWNAME_Prophet", "$FLWNAME_Jester", "$FLWNAME_Psycho", "$FLWNAME_Blitz", "$FLWNAME_Scorpion", "$FLWNAME_Fury", "$FLWNAME_Arclite", "$FLWNAME_Redeemer", "$FLWNAME_Bishop", "$FLWNAME_War", "$FLWNAME_Wrath", "$FLWNAME_Pestilence", "$FLWNAME_Inferno",
			"$FLWNAME_Vampire", "$FLWNAME_Doom", "$FLWNAME_Tormentor", "$FLWNAME_Major", "$FLWNAME_Visor", "$FLWNAME_Phobos", "$FLWNAME_Grunt", "$FLWNAME_Wrack", "$FLWNAME_Angel", "$FLWNAME_Razor", "$FLWNAME_Bones", "$FLWNAME_Baron", "$FLWNAME_Kamikaze", "$FLWNAME_Vega", "$FLWNAME_Bull", "$FLWNAME_Ghost", "$FLWNAME_Ninja",
			"$FLWNAME_Vector", "$FLWNAME_Tensor", "$FLWNAME_Malice", "$FLWNAME_Blackjack", "$FLWNAME_Prism", "$FLWNAME_Remus", "$FLWNAME_Torch", "$FLWNAME_Anthrax", "$FLWNAME_Divisor", "$FLWNAME_Cathode", "$FLWNAME_Cyclops", "$FLWNAME_Virus", "$FLWNAME_Aspect", "$FLWNAME_Nova", "$FLWNAME_Raptor", "$FLWNAME_Eagle"
		};

		string PickedName = "";
		Array<int> IteratedIndices;

		int Size = 0;
		switch (gender)
		{
			case 0: Size = MaleNames.Size(); break;
			case 1: Size = FemaleNames.Size(); break;
			case 2: Size = NeutralNames.Size(); break;
		}

		do
		{
			int Index = random[rmnamerand](0, Size - 1);
			if (IteratedIndices.Size() > 0 && IteratedIndices.Find(Index) != IteratedIndices.Size())
			{
				continue;
			}

			IteratedIndices.Push(Index);

			switch (gender)
			{
				case 0: PickedName = MaleNames[Index]; break;
				case 1: PickedName = FemaleNames[Index]; break;
				case 2: PickedName = NeutralNames[Index]; break;
			}

			if (!NameExists(PickedName))
			{
				UniqueName = PickedName;
				break;
			}
		} while (IteratedIndices.Size() < Size);

		return UniqueName;
	}

	private bool NameExists(string followerName)
	{
		for (int i = 0; i < Followers.Size(); ++i)
		{
			if (Followers[i].GetTag() ~== followerName)
			{
				return true;
			}
		}

		Array<FollowerBody> InvFollowers;
		FetchFollowersInInventory(InvFollowers);
		for (int i = 0; i < InvFollowers.Size(); ++i)
		{
			for (int j = 0; j < InvFollowers[i].Data.Size(); ++j)
			{
				if (InvFollowers[i].Data[j].Tag ~== followerName)
				{
					return true;
				}
			}
		}

		return false;
	}
}