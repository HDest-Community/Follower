extend class FollowerHandler
{
	private void RecruitMarine(HDMarine m, int owningPlayer)
	{
		if (!m)
		{
			return;
		}

		if (!m.bFRIENDLY && random(0, 1))
		{
			m.DamageMobj(m, m, m.SpawnHealth() * 5, 'bleedout', DMG_FORCED | DMG_NO_PAIN | DMG_THRUSTLESS | DMG_NO_FACTOR);
			return;
		}

		HDFollower Recruit = CreateFollower('RecruitedMarine', owningPlayer, m.pos);
		if (!m.bFRIENDLY)
		{
			m.bFRIENDLY = true;
			m.SetNickname();
		}

		int Gender = 0;
		string snd = m.PainSound;
		if (snd.IndexOf("marinef") > -1)
		{
			Gender = 1;
		}
		else if (snd.IndexOf("marineb") > -1)
		{
			Gender = 2;
		}
		Recruit.angle = m.angle;
		Recruit.Health = m.Health;
		Recruit.Gender = Gender;
		Recruit.PainSound = m.PainSound;
		Recruit.DeathSound = m.DeathSound;
		Recruit.DisplayName = m.nickname;
		Recruit.Translation = m.Translation;

		let Armor = HDArmourWorn(m.FindInventory('HDArmourWorn'));
		if (Armor)
		{
			let NewArmor = HDArmourWorn(Recruit.GiveInventoryType('HDArmourWorn'));
			NewArmor.Durability = Armor.Durability;
			NewArmor.Mega = Armor.Mega;
		}

		if (m.InStateSequence(m.CurState, m.FindState('Falldown')))
		{
			Recruit.Status = FStatus_InactiveOrDead;
			Recruit.SetStateLabel('Standup');
		}

		m.Destroy();
	}

	static bool IsPuppet(Actor a)
	{
		ThinkerIterator it = ThinkerIterator.Create('AngelFire', Thinker.STAT_DEFAULT);
		AngelFire f;
		while ((f = AngelFire(it.Next())))
		{
			if (f.master && f.master == a)
			{
				return true;
			}
		}
		return false;
	}
}